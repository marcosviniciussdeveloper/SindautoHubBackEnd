// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SindautoHub.Infrastructure.Persistance.Database;

#nullable disable

namespace SindautoHub.Infrastructure.Migrations
{
    [DbContext(typeof(SindautoHubContext))]
    [Migration("20250903201059_AlteraTipoColunaHorarioFuncionamentoSetor")]
    partial class AlteraTipoColunaHorarioFuncionamentoSetor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SindautoHub.Domain.Entities.Models.Cargo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DescricaoAtribuicoes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("cargos", (string)null);
                });

            modelBuilder.Entity("SindautoHub.Domain.Entities.Models.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CargoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("text");

                    b.Property<TimeOnly?>("HorarioFim")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly?>("HorarioInicio")
                        .HasColumnType("time without time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("SetorId")
                        .HasColumnType("uuid");

                    b.Property<int>("TipoContratacao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("SetorId");

                    b.ToTable("funcionarios", (string)null);
                });

            modelBuilder.Entity("SindautoHub.Domain.Entities.Models.Notificacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<TimeOnly>("DataCriacao")
                        .HasColumnType("time without time zone");

                    b.Property<bool>("Lida")
                        .HasColumnType("boolean");

                    b.Property<string>("LinkDestino")
                        .HasColumnType("text");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid?>("NotificacaoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("NotificacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("notificacoes", (string)null);
                });

            modelBuilder.Entity("SindautoHub.Domain.Entities.Models.Postagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<Guid>("AutorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeOnly>("DataPublicacao")
                        .HasColumnType("time without time zone");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("postagens", (string)null);
                });

            modelBuilder.Entity("SindautoHub.Domain.Entities.Models.Setor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HorarioFuncionamento")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<string>("NomeSetor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("setores", (string)null);
                });

            modelBuilder.Entity("SindautoHub.Domain.Entities.Models.Funcionario", b =>
                {
                    b.HasOne("SindautoHub.Domain.Entities.Models.Cargo", "cargo")
                        .WithMany("Funcionarios")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SindautoHub.Domain.Entities.Models.Setor", "setor")
                        .WithMany("Funcionarios")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cargo");

                    b.Navigation("setor");
                });

            modelBuilder.Entity("SindautoHub.Domain.Entities.Models.Notificacao", b =>
                {
                    b.HasOne("SindautoHub.Domain.Entities.Models.Notificacao", null)
                        .WithMany("Notificacoes")
                        .HasForeignKey("NotificacaoId");

                    b.HasOne("SindautoHub.Domain.Entities.Models.Funcionario", "Usuario")
                        .WithMany("Notificacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SindautoHub.Domain.Entities.Models.Postagem", b =>
                {
                    b.HasOne("SindautoHub.Domain.Entities.Models.Funcionario", "Autor")
                        .WithMany("Postagens")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("SindautoHub.Domain.Entities.Models.Cargo", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("SindautoHub.Domain.Entities.Models.Funcionario", b =>
                {
                    b.Navigation("Notificacoes");

                    b.Navigation("Postagens");
                });

            modelBuilder.Entity("SindautoHub.Domain.Entities.Models.Notificacao", b =>
                {
                    b.Navigation("Notificacoes");
                });

            modelBuilder.Entity("SindautoHub.Domain.Entities.Models.Setor", b =>
                {
                    b.Navigation("Funcionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
